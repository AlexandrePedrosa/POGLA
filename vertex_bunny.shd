#version 450

in vec3 position;
in vec3 normalSmooth;

out vec3 color;
out float diffuse;
out vec4 gs_normal;

vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(-10.0, -10.0, -50.0);

vec3 object_color = vec3(0.0, 1.0, 1.0);

uniform mat4 model_matrix;
uniform mat4 view_matrix;
uniform mat4 projection_matrix;

void main() {
    gl_Position = projection_matrix * view_matrix * model_matrix * vec4(position, 1.0);
    gs_normal = projection_matrix * view_matrix * model_matrix * vec4(normalSmooth, 0.0);
    diffuse = clamp(dot(normalize(position - light_position), vec3(model_matrix * vec4(normalSmooth, 0.0))), 0.0, 1.0);
    //color = vec3(position.x + 0.5, position.z + 0.5, 1.0);
    color = vec3(0.4, 0.5, 0.6);
}
