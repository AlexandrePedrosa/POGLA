#version 450

layout(local_size_x = 1, local_size_y = 1024) in;

layout(rgba32f, binding = 2) uniform image2D input_image;
layout(rgba32f, binding = 1) uniform image2D output_image;

shared vec4 scanline[1024];

const float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216); // les poids pour faire des gaussiennes

void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    scanline[pos.y % 1024] = imageLoad(input_image, pos);
    barrier();

    vec4 result = scanline[pos.y % 1024] * weight[0];
    for (int i = 1; i < 5; i++) {
        result += scanline[min(pos.y % 1024 + i, 1023)] * weight[i];
        result += scanline[max(pos.y % 1024 - i, 0)] * weight[i];
    }
    imageStore(output_image, pos.xy, result);
}