#version 450

in vec3 geo_color;
in vec3 fr_position;
in vec3 fr_normal;

layout(location=0) out vec4 output_color;
layout(location=1) out vec4 bright_parts;

vec3 light_position = vec3(10.0, 10.0, 50.0);

uniform vec3 camera_pos;
uniform samplerCube cubemap;

float thresh = 0.8;

void main() {
    vec3 i = normalize(fr_position - camera_pos);
    vec3 r = reflect(i, normalize(fr_normal));
    float diffuse = clamp(dot(normalize(light_position - fr_position), normalize(fr_normal)) + 0.1, 0.0, 1.0);
    vec4 reflection = texture(cubemap, r);
    output_color = diffuse * vec4(geo_color, 1.0) * 0.1 + 0.9 * reflection;
}
